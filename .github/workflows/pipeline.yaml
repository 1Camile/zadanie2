name: Build and Publish image

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  CACHE_IMAGE: docker.io/${{ vars.DOCKERHUB_USERNAME }}/zadanie2:cache

jobs:
  build:
    name: Build, check and push Docker image to GitHub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the source_repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.GIT_HUB_USERNAME }}
          password: ${{ secrets.GIT_HUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
          # outputs: type=docker,dest=/tmp/image.tar
          tags: local-runner/image:test

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          # input: /tmp/image.tar
          input: local-runner/image:test
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH

      - name: Push image to GHCR (only if scan passed)
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
